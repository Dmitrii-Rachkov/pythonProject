# На самом деле в Python нет переменных, есть имена, но для простоты используют
# термин 'переменная'.
# В Python переменная - это именованная область памяти!!!
# Данные храняться в ОЗУ.

# Если в процессе выполнения программы появляется новый объект, то под него интерпретатор
# выделяет область памяти. После чего Python записывает в свой внутренний список адрес этого объекта
# После того, как мы дали имя области памяти, интерпретатор Python автоматически распознает
# значение и присваивает тип (динамическая типизация).
# Получить тип данных переменной вы можете при помощи функции 'type()' где на вход вы можете
# подать переменные, методы, значения (числа, строки), структуры данных.
# Названия переменных чувствительны к регистру.

# Чтобы мы получили доступ к созданному объекту (его значению) для этих целей и предназначены
# именованные области - переменные.
# То есть мы не работаем с самим адресом, мы вместо него используем имя.
# Важно: переменная в Python не хранит значение напрямую - она хранит ссылку на объект
# название переменной всегда с маленькой буквы или нижнего подчеркивания
# есть два стиля для наименования переменных:
# 'camel Case' - например 'oneYear' когда второе слово с большой буквы
# 'underscore' - с помощью нижнего подчеркивания, например 'one_Year'

a = 10
print(id(a))
# функция 'id()' - позволяет посмотреть адрес объекта в памяти

print(type(a))
# функция 'type()' - позволяет посмотреть тип объекта
# динамическая типизация это значит python автоматически присваивает объекту тип данных

b = a
print(a)
print(b)
print(id(a))
print(id(b))
# как мы видим адреса объектов одинаковые, переменные ссылаются на одну область памяти

c = 10
print(c)
print(id(c))
# даже если мы новой перемнной присвоим тоже значение что и для 'a',
# то переменная будет ссылаться на тотже адрес в памяти
