"""Сериализация"""

# Cериализация (англ. serialization, marshalling) – это способ преобразования структуры данных
# в линейную форму, которую можно сохранить или передать по сети.
# Обратный процесс преобразования сериализованного объекта в исходную структуру данных
# называется десериализацией (англ. deserialization, unmarshalling).

# В стандартной библиотеке Python три модуля позволяют сериализовать и десериализовать объекты:
# marshal
# json
# pickle

# Самый старый модуль из перечисленных – marshal.
# Он используется для чтения и записи байт-кода модулей Python и .pyc-файлов,
# создаваемых при импорте модулей Python. Хотя его и можно использовать для сериализации,
# делать это не рекомендуется.

# Модуль json обеспечивает работу со стандартными файлами JSON.
# Это широко используемый формат обмена данными, удобный для чтения и не зависящий от языка программирования.
# С помощью модуля json вы можете сериализовать и десериализовать стандартные типы данных Python:
#
# bool, dict, int, float, list, string, tuple, None
#
#
# Наконец, ещё один встроенный способ сериализации и десериализации объектов в Python – модуль pickle.
# Он отличается от модуля json тем, что сериализует объекты в двоичном виде.
# То есть результат не может быть прочитан человеком.
# Кроме того, pickle работает быстрее и позволяет сериализовать многие другие типы Python,
# включая пользовательские.

# Внутри модуля pickle
# Модуль pickle содержит четыре основные функции:

# pickle.dump(obj, file, protocol=None, *, fix_imports=True, buffer_callback=None)
# pickle.dumps(obj, protocol=None, *, fix_imports=True, buffer_callback=None)
# pickle.load(file, *, fix_imports=True, encoding="ASCII", errors="strict", buffers=None)
# pickle.loads(bytes_object, *, fix_imports=True, encoding="ASCII", errors="strict", buffers=None)

# Первые два метода применяются для сериализации, а два других – для обратного процесса.
# Разница между первыми двумя методами заключается в том, что dump создаёт файл,
# содержащий результат сериализации, а dumps – возвращает байтовую строку.
# То же самое относится к load и loads.