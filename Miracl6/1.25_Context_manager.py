"""Менеджеры контекста"""

# Ручное закрытие файлов, а также отдача закрытия на откуп среде исполнения,
# обладают одним существенным недостатком: если между открытием файла на запись и его закрытием
# произойдёт ошибка, то в лучшем случае файл окажется открыт слишком долго (может остаться ссылка),
# а в худшем случае не сохранится часть данных.

# Хочется иметь возможность автоматически закрывать файл сразу после окончания работы с ним
# и осуществлять закрытие даже при возникновении ошибки.
# Файловые объекты уже умеют работать в таком режиме, но для этого их нужно использовать
# как менеджеры контекста.

# Менеджер контекста (context manager) — это некий объект, реализующий одноимённый протокол
# (да, кругом протоколы!).
# Объекты, реализующие этот протокол, позволяют использовать следующий специальный синтаксис:

# with object as foo:
    # Здесь нам доступен ресурс foo.
    # Это тело with-блока.
# А здесь ресурс foo уже освобождён,
# даже если в теле with-блока произошла ошибка.

# Весь код в теле with-блока работает "в контексте".
# Чаще всего контекст подразумевает выделение некоего ресурса, например, файла.
# По выходу из контекста ресурс автоматически освобождается, даже если при выполнении блока
# возникло исключение.То, что нам нужно!

def write_file():
    with open('file_place.txt', 'a') as file:
        file.write('Hello world\n')

write_file()

